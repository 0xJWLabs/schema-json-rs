[package]
name = "schema_jsonrs"
description = "Generate JSON Schemas from Rust code"
homepage = "https://github.com/0xJWLabs/schema-json-rs"
repository = "https://github.com/0xJWLabs/schema-json-rs"
version = "0.1.0"
authors = ["Graham Esau <gesau@hotmail.co.uk>", "0xJWLabs <0xjwlabs@gmail.com>"]
edition = "2024"
license = "MIT"
readme = "README.md"
keywords = ["rust", "json-schema", "serde"]
categories = ["encoding", "no-std"]

[dependencies]
schema_jsonrs_derive = { version = "=0.1.0", optional = true, path = "../schema_jsonrs_derive" }
serde = { version = "1.0.217", default-features = false, features = ["alloc"] }
serde_jsonc2 = { version = "0.1.2", default-features = false, features = [
  "alloc",
] }
dyn-clone = "1.0.17"
ref-cast = "1.0.23"

# optional dependencies
arrayvec07 = { version = "0.7.6", default-features = false, optional = true, package = "arrayvec" }
bigdecimal04 = { version = "0.4.7", default-features = false, optional = true, package = "bigdecimal" }
bytes1 = { version = "1.9.0", default-features = false, optional = true, package = "bytes" }
chrono04 = { version = "0.4.39", default-features = false, optional = true, package = "chrono" }
either1 = { version = "1.3", default-features = false, optional = true, package = "either" }
indexmap2 = { version = "2.0", default-features = false, optional = true, package = "indexmap" }
rust_decimal1 = { version = "1", default-features = false, optional = true, package = "rust_decimal" }
semver1 = { version = "1.0.24", default-features = false, optional = true, package = "semver" }
smallvec1 = { version = "1.13.2", default-features = false, optional = true, package = "smallvec" }
smol_str02 = { version = "0.3.2", default-features = false, optional = true, package = "smol_str" }
url2 = { version = "2.5.4", default-features = false, optional = true, package = "url" }
uuid1 = { version = "1.11.1", default-features = false, optional = true, package = "uuid" }

[dev-dependencies]
pretty_assertions = "1.4.1"

[features]
default = ["derive", "std"]

# Provide impls for common standard library types like `HashMap<K, V>`.
# Requires a dependency on the Rust standard library.
std = []

# Provide `derive(JsonSchema)` macro.
derive = ["schema_jsonrs_derive"]

# Preserves order of properties inserted into a `Schema`.
# When deriving `JsonSchema`, this ensures that the `properties` entires match
# the order of the fields in the struct definition.
preserve_order = ["serde_jsonc2/preserve_order"]

# Implements `JsonSchema` on `serde_jsonc2::value::RawValue`
raw_value = ["serde_jsonc2/raw_value"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--extend-css", "docs-rs-custom.css"]
